<?xml version="1.0" encoding="UTF-8"?>
<launch>


<include file="$(find yoyoman01_traject)/launch/yoyoman01_control2.launch"/>
<arg name="debug" default="false"/>



  <arg name="moveit_manage_controllers" default="true"/>
  <param name="moveit_manage_controllers" value="$(arg moveit_manage_controllers)"/>
  <param name="allowed_execution_duration_scaling" value="1.2"/> <!-- default 1.2 -->
  <param name="allowed_goal_duration_margin" value="0.5"/> <!-- default 0.5 -->

  <!--include file="$(find yoyoman01_traject)/launch/launch moins pertinent/ompl_planning.launch"/-->

  <!-- Trajectory Execution Functionality -->

  <arg name="allow_trajectory_execution" default="true"/> 

  <!-- MoveIt! -->

  <arg unless="$(arg debug)" name="launch_prefix" value="" />
  <arg if="$(arg debug)" name="launch_prefix" value="gdb --ex run --args" />

  <arg name="info" default="$(arg debug)" />  
  <arg unless="$(arg info)" name="command_args" value="" />
  <arg if="$(arg info)" name="command_args" value="--debug" />


  <arg name="fake_execution" default="false"/>
  <arg name="max_safe_path_cost" default="1"/>
  <arg name="jiggle_fraction" default="0.05" />
  <arg name="publish_monitored_planning_scene" default="true"/>



  <!-- remap topics to conform to ROS-I specifications -->
  <remap from="/position_trajectory_controller/follow_joint_trajectory" to="/joint_trajectory_action" />
  <remap from="/position_trajectory_controller/state" to="/feedback_states" />
  <remap from="/position_trajectory_controller/command" to="/joint_path_command"/>


  <node name="move_group" launch-prefix="$(arg launch_prefix)" pkg="moveit_ros_move_group" type="move_group" respawn="false" output="screen" args="$(arg command_args)">
    <!-- Set the display variable, in case OpenGL code is used internally -->
    <env name="DISPLAY" value="$(optenv DISPLAY :0)" />

    <param name="moveit_controller_manager" value="moveit_simple_controller_manager/MoveItSimpleControllerManager"/>
    <!--rosparam file="$(find yoyoman01_traject)/config/controller_list.yaml" command="load"/-->
    <param name="allow_trajectory_execution" value="$(arg allow_trajectory_execution)"/>
    <param name="max_safe_path_cost" value="$(arg max_safe_path_cost)"/>
    <param name="jiggle_fraction" value="$(arg jiggle_fraction)" />

    <!-- MoveGroup capabilities to load -->
    <param name="capabilities" value="move_group/MoveGroupCartesianPathService
				      move_group/MoveGroupExecuteService
				      move_group/MoveGroupKinematicsService
				      move_group/MoveGroupMoveAction
				      move_group/MoveGroupPickPlaceAction
				      move_group/MoveGroupPlanService
				      move_group/MoveGroupQueryPlannersService
				      move_group/MoveGroupStateValidationService
				      move_group/MoveGroupGetPlanningSceneService
              			      move_group/ClearOctomapService
				      " />

    <!-- Publish the planning scene of the physical robot so that rviz plugin can know actual robot -->
    <param name="planning_scene_monitor/publish_planning_scene" value="$(arg publish_monitored_planning_scene)" />
    <param name="planning_scene_monitor/publish_geometry_updates" value="$(arg publish_monitored_planning_scene)" />
    <param name="planning_scene_monitor/publish_state_updates" value="$(arg publish_monitored_planning_scene)" />
    <param name="planning_scene_monitor/publish_transforms_updates" value="$(arg publish_monitored_planning_scene)" />
</node>


 <include file="$(find yoyoman01_traject)/launch/play_motion.launch"/>
 <node name="movement" pkg="yoyoman01_traject" type="movement_real.py" output="screen"/>
</launch>